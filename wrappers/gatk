#!/usr/bin/perl 
# 
# wrapper to gatk to make things a bit more simple
# 
# 
# Kim Brugger (13 Jul 2010), contact: kim.brugger@easih.ac.uk

use strict;
use warnings;
use Data::Dumper;

my $argv_list = "";


my @java_paths = ("/usr/local/Cluster-Apps/java/",
		  "/ifs/software/installed/java/",
		  "/usr/local/java/",
		  "/usr/bin/");


my @gatk_paths = ("/usr/local/installed/",
		  "/home/easih/installed/",
		  "/home/kb468/bin/gatk_live/",
		  "/ifs/software/installed/");

my ($java, $gatk);
set_paths();

my $username = scalar getpwuid $<;
my $scratch_dir  = "/home/$username/scratch/tmp";
$scratch_dir = "/tmp" if ( ! -d "/home/$username/scratch/" );
mkdir "/home/$username/scratch/tmp" if ( -d "/home/$username/scratch/" );

my $resources  = " -resources ~/bin/gatk_live/resources/R  -Rscript /usr/bin/Rscript ";

foreach my $argv ( @ARGV ) {
  next if ( $argv eq $0);

  if ( $argv eq "--version" ) {
    open( my $vpipe, "gatk 2> /dev/null  | head -n 2 |") || die "Could not open gatk pipe: $!\n";
    <$vpipe>;
    my $version = <$vpipe>;
    print "$version";
    close( $vpipe );
    exit;
  }
 

 
  if ( $argv =~ / /) {
    $argv_list .= qq{ "$argv" };
  }
  else {
    $argv_list .= qq{ $argv };
  }

  $argv_list .=  $resources if ( $argv eq "GenerateVariantClusters" || $argv eq "VariantRecalibrator" );

}



#print "$java -jar $gatk $argv_list\n";
system "$java -Djava.io.tmpdir=/home/$username/scratch/tmp -jar $gatk $argv_list\n";
my $exit_value = $?>>8;
exit $exit_value;


# 
# 
# 
# Kim Brugger (06 Oct 2010)
sub set_paths {
  
  my ($java_date, $gatk_date) = (0, 0);
  
  foreach my $java_path ( @java_paths ) {
    
    if (-e $java_path ) {
      foreach my $installation ( glob("$java_path/*")) {
	if ( -e "$installation/bin/java" && -x "$installation/bin/java"  ) {
	  
	  my ($dev, $ino, $mode, $nlink, $uid, $gid, $rdev, $size, $atime, $mtime, $ctime, $blksize, $blocks) = stat("$installation/bin/java");
	  if ( $java_date < $mtime ) {
	    $java = "$installation/bin/java";
	    $java_date = $mtime;
	  }
	}
      }
    }
  }
  


  foreach my $gatk_path ( @gatk_paths ) {
    
    if (-e $gatk_path ) {
      foreach my $file ( split("\n", `find $gatk_path | grep GenomeAnalysisTK.jar`)) {
	my ($dev, $ino, $mode, $nlink, $uid, $gid, $rdev, $size, $atime, $mtime, $ctime, $blksize, $blocks) = stat("$file");
	if ( $gatk_date < $mtime ) {
	  $gatk = $file;
	  $gatk_date = $mtime;
	  last;
	}
      }
    }
  }

}









__END__


#!/bin/bash


i=0
argv=()
for arg in "$@"; do
    if [[ $arg =~ .*\ .* ]]
    then
      argv[$i]="\"$arg\"";
    else
      argv[$i]="$arg";
    fi
    i=$((i + 1))
done

echo "/usr/local/java/jre1.6.0_19/bin/java -jar /usr/local/installed/GATK/java/GenomeAnalysisTK.jar ${argv[@]} "

/usr/local/java/jre1.6.0_19/bin/java -jar /usr/local/installed/GATK/java/GenomeAnalysisTK.jar "${argv[@]}"

